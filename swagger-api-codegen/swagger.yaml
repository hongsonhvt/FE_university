openapi: 3.0.0
paths:
  /academic-years:
    post:
      operationId: createAcademicYear
      summary: Create Academic Year
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAcademicYearDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AcademicYearDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - academic-years
      security:
        - accessToken: []
    get:
      operationId: findAcademicYearInRange
      summary: Find Academic Year In Range
      parameters:
        - name: start
          required: false
          in: query
          schema:
            type: number
        - name: end
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AcademicYearDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - academic-years
      security:
        - accessToken: []
  /academic-years/current:
    get:
      operationId: getCurrentAcademicYear
      summary: Get Current Academic Year
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AcademicYearDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - academic-years
      security:
        - accessToken: []
  /academic-years/{id}:
    get:
      operationId: findOneAcademicYear
      summary: Find One Academic Year
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AcademicYearDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - academic-years
      security:
        - accessToken: []
    delete:
      operationId: removeAcademicYear
      summary: Remove Academic Year
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AcademicYearDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - academic-years
      security:
        - accessToken: []
  /academic-years/current/{id}:
    put:
      operationId: updateCurrent
      summary: Update Current
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: boolean
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - academic-years
      security:
        - accessToken: []
  /auth/login:
    post:
      operationId: login
      summary: Login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginModel'
      responses:
        '200':
          description: Login JWT token
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/AccessToken'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '401':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - auth
  /users:
    post:
      operationId: createUser
      summary: Create User
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags:
        - users
      security:
        - accessToken: []
  /users/me:
    get:
      operationId: getUserProfile
      summary: Get User Profile
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/JwtUserDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - users
      security:
        - accessToken: []
  /change-session-requests:
    get:
      operationId: findRequestsByCondition
      summary: Find Requests By Condition
      parameters:
        - name: from
          required: true
          in: query
          schema:
            type: string
        - name: to
          required: true
          in: query
          schema:
            type: string
        - name: substituteTeacherId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ChangeSessionRequestDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - change-session-requests
      security:
        - accessToken: []
  /change-session-requests/{id}:
    patch:
      operationId: updateRequest
      summary: Update Request
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChangeSessionRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ChangeSessionRequestDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - change-session-requests
      security:
        - accessToken: []
  /change-session-requests/{id}/approve:
    patch:
      operationId: approveRequest
      summary: Approve Request
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ChangeSessionRequestDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - change-session-requests
      security:
        - accessToken: []
  /change-session-requests/{id}/cancel:
    patch:
      operationId: cancelRequest
      summary: Cancel Request
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ChangeSessionRequestDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - change-session-requests
      security:
        - accessToken: []
  /change-session-requests/{id}/reject:
    patch:
      operationId: rejectRequest
      summary: Reject Request
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ChangeSessionRequestDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '400':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - change-session-requests
      security:
        - accessToken: []
  /course-classes:
    post:
      operationId: createCourseClass
      summary: Create Course Class
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourseClassDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseClassListItemDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
    get:
      operationId: findCourseClassByCondition
      summary: Find Course Class By Condition
      parameters:
        - name: code
          required: false
          in: query
          schema:
            type: string
        - name: name
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseClassListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - course-classes
      security:
        - accessToken: []
  /course-classes/{id}:
    get:
      operationId: findOneCourseClass
      summary: Find One Course Class
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseClassDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - course-classes
      security:
        - accessToken: []
    patch:
      operationId: updateCourseClass
      summary: Update Course Class
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseClassDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseClassListItemDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
    delete:
      operationId: removeCourseClass
      summary: Remove Course Class
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseClassListItemDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
  /course-classes/{id}/scores:
    get:
      operationId: getCourseClassScores
      summary: Get Course Class Scores
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentScoreListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
    put:
      operationId: updateCourseClassScores
      summary: Update Course Class Scores
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseClassScoreDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentScoreListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
  /course-classes/{id}/sessions:
    get:
      operationId: getCourseClassSessions
      summary: Get Course Class Sessions
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SessionListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
  /course-classes/{id}/students:
    put:
      operationId: updateCourseClassStudentsList
      summary: Update Course Class Students List
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseClassStudentsListDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentSimpleDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - course-classes
      security:
        - accessToken: []
  /courses:
    post:
      operationId: createCourse
      summary: Create Course
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourseDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - courses
      security:
        - accessToken: []
    get:
      operationId: findCourseByCondition
      summary: Find Course By Condition
      parameters:
        - name: code
          required: false
          in: query
          schema:
            type: string
        - name: name
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - courses
      security:
        - accessToken: []
  /courses/{id}:
    get:
      operationId: findOneCourse
      summary: Find One Course
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - courses
      security:
        - accessToken: []
    patch:
      operationId: updateCourse
      summary: Update Course
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - courses
      security:
        - accessToken: []
    delete:
      operationId: removeCourse
      summary: Remove Course
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/CourseDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - courses
      security:
        - accessToken: []
  /management-classes:
    post:
      operationId: createManagementClass
      summary: Create Management Class
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateManagementClassDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ManagementClassListItemDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - management-classes
      security:
        - accessToken: []
    get:
      operationId: findManagementClassByCondition
      summary: Find Management Class By Condition
      parameters:
        - name: code
          required: false
          in: query
          schema:
            type: string
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: academicYearId
          required: false
          in: query
          schema:
            type: string
        - name: programId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ManagementClassListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - management-classes
      security:
        - accessToken: []
  /management-classes/{id}:
    get:
      operationId: findOneManagementClass
      summary: Find One Management Class
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ManagementClassDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - management-classes
      security:
        - accessToken: []
    patch:
      operationId: updateManagementClass
      summary: Update Management Class
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManagementClassDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ManagementClassListItemDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - management-classes
      security:
        - accessToken: []
    delete:
      operationId: removeManagementClass
      summary: Remove Management Class
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ManagementClassDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - management-classes
      security:
        - accessToken: []
  /programs:
    post:
      operationId: createProgram
      summary: Create Program
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProgramDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramListItemDto'
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - programs
      security:
        - accessToken: []
    get:
      operationId: findProgramByCondition
      summary: Find Program By Condition
      parameters:
        - name: code
          required: false
          in: query
          schema:
            type: string
        - name: name
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProgramListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - programs
      security:
        - accessToken: []
  /programs/{id}:
    get:
      operationId: findOneProgram
      summary: Find One Program
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - programs
      security:
        - accessToken: []
    patch:
      operationId: updateProgram
      summary: Update Program
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProgramDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramListItemDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
        '409':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - programs
      security:
        - accessToken: []
    delete:
      operationId: removeProgram
      summary: Remove Program
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramListItemDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - programs
      security:
        - accessToken: []
  /programs/{id}/courses:
    patch:
      operationId: addProgramCourses
      summary: Add Program Courses
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCoursesDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - programs
      security:
        - accessToken: []
  /programs/import:
    post:
      operationId: importPrograms
      summary: Import Programs
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ProgramDto'
                        nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '201':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - programs
      security:
        - accessToken: []
  /scores:
    get:
      operationId: getMyScores
      summary: Get My Scores
      parameters:
        - name: academicYearId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentScoreDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - scores
      security:
        - accessToken: []
  /sessions:
    get:
      operationId: getSessionByCondition
      summary: Get Session By Condition
      parameters:
        - name: courseClassId
          required: false
          in: query
          schema:
            type: string
        - name: substituteTeacherId
          required: false
          in: query
          schema:
            type: string
        - name: from
          required: false
          in: query
          schema:
            type: string
        - name: to
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SessionListItemDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - sessions
      security:
        - accessToken: []
  /sessions/{id}:
    get:
      operationId: findOneSession
      summary: Find One Session
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/SessionDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - sessions
      security:
        - accessToken: []
  /sessions/{id}/change:
    post:
      operationId: createChangeRequest
      summary: Create Change Request
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChangeSessionRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        $ref: '#/components/schemas/ChangeSessionRequestDto'
                        nullable: true
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '201':
          description: ''
      tags:
        - sessions
      security:
        - accessToken: []
  /students:
    get:
      operationId: findStudentsByCondition
      summary: Find Students By Condition
      parameters:
        - name: studentId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentSimpleDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - students
      security:
        - accessToken: []
  /students/{id}:
    get:
      operationId: findOneStudent
      summary: Find One Student
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - students
      security:
        - accessToken: []
    delete:
      operationId: removeStudent
      summary: Remove Student
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentSimpleDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - students
      security:
        - accessToken: []
  /students/{id}/scores:
    get:
      operationId: getStudentScores
      summary: Get Student Scores
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: academicYearId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentScoreDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - students
      security:
        - accessToken: []
  /teachers:
    get:
      operationId: findTeachersByCondition
      summary: Find Teachers By Condition
      parameters:
        - name: teacherId
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/TeacherSimpleDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - teachers
      security:
        - accessToken: []
  /teachers/{id}:
    get:
      operationId: findOneTeacher
      summary: Find One Teacher
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/TeacherDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
      tags:
        - teachers
      security:
        - accessToken: []
    delete:
      operationId: removeTeacher
      summary: Remove Teacher
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Result'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/TeacherSimpleDto'
                          nullable: false
                      success:
                        type: boolean
                      message:
                        type: string
                        nullable: true
                        example: null
        '404':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: object
                        nullable: true
                        example: null
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
      tags:
        - teachers
      security:
        - accessToken: []
info:
  title: ''
  description: ''
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    accessToken:
      scheme: Bearer
      bearerFormat: JWT
      name: Authorization
      in: Header
      type: http
  schemas:
    Result:
      type: object
      properties:
        data:
          type: object
        success:
          type: boolean
        message:
          type: object
      required:
        - data
        - success
        - message
    AcademicYearDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        startYear:
          type: number
        endYear:
          type: number
        isCurrent:
          type: boolean
      required:
        - id
        - code
        - name
        - startYear
        - endYear
        - isCurrent
    CreateAcademicYearDto:
      type: object
      properties:
        startYear:
          type: number
          minimum: 2010
          maximum: 2050
      required:
        - startYear
    AccessToken:
      type: object
      properties:
        accessToken:
          type: string
      required:
        - accessToken
    LoginModel:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    Role:
      type: string
      enum:
        - SystemAdmin
        - Admin
        - Teacher
        - Student
    CreateUserProfileTeacherDto:
      type: object
      properties:
        teacherId:
          type: string
      required:
        - teacherId
    CreateUserProfileStudentDto:
      type: object
      properties:
        studentId:
          type: string
        managementClassId:
          type: string
      required:
        - studentId
        - managementClassId
    CreateUserProfileDto:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
        phoneNumber:
          type: string
          nullable: true
        isMale:
          type: boolean
        address:
          type: string
          nullable: true
        teacher:
          $ref: '#/components/schemas/CreateUserProfileTeacherDto'
        student:
          $ref: '#/components/schemas/CreateUserProfileStudentDto'
      required:
        - firstName
        - lastName
        - isMale
    CreateUserDto:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        email:
          type: string
        password:
          type: string
        profile:
          $ref: '#/components/schemas/CreateUserProfileDto'
      required:
        - role
        - email
        - password
        - profile
    JwtUserDto:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        sub:
          type: string
        email:
          type: string
      required:
        - role
        - sub
        - email
    ChangeSessionRequestStatus:
      type: string
      enum:
        - Pending
        - Approved
        - Rejected
        - Cancelled
    ProfileDto:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
      required:
        - id
        - firstName
        - middleName
        - lastName
    TeacherSimpleDto:
      type: object
      properties:
        id:
          type: string
        teacherId:
          type: string
        profile:
          $ref: '#/components/schemas/ProfileDto'
      required:
        - id
        - teacherId
        - profile
    CourseListItemDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        createdAt:
          type: string
      required:
        - id
        - code
        - name
        - createdAt
    CourseClassSlotDto:
      type: object
      properties:
        startAt:
          type: string
        endAt:
          type: string
      required:
        - startAt
        - endAt
    CourseClassListItemDto:
      type: object
      properties:
        teacher:
          $ref: '#/components/schemas/TeacherSimpleDto'
        id:
          type: string
        code:
          type: string
        name:
          type: string
        course:
          $ref: '#/components/schemas/CourseListItemDto'
        startAt:
          type: string
        endAt:
          type: string
        sessionCount:
          type: number
        isoSlots:
          type: array
          items:
            $ref: '#/components/schemas/CourseClassSlotDto'
      required:
        - teacher
        - id
        - code
        - name
        - course
        - startAt
        - sessionCount
        - isoSlots
    ChangeSessionRequestDto:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ChangeSessionRequestStatus'
        id:
          type: string
        session:
          $ref: '#/components/schemas/SessionListItemDto'
        substituteTeacher:
          $ref: '#/components/schemas/TeacherSimpleDto'
        oldStartAt:
          type: string
        oldEndAt:
          type: string
        newStartAt:
          type: string
        newEndAt:
          type: string
      required:
        - status
        - id
        - session
        - oldStartAt
        - oldEndAt
        - newStartAt
        - newEndAt
    SessionListItemDto:
      type: object
      properties:
        id:
          type: string
        courseClass:
          $ref: '#/components/schemas/CourseClassListItemDto'
        startAt:
          type: string
        endAt:
          type: string
        changeSessionRequests:
          type: array
          items:
            $ref: '#/components/schemas/ChangeSessionRequestDto'
      required:
        - id
        - courseClass
        - startAt
        - endAt
        - changeSessionRequests
    UpdateChangeSessionRequestDto:
      type: object
      properties:
        startAt:
          type: string
        endAt:
          type: string
        substituteTeacherId:
          type: string
    CreateCourseClassSlotDto:
      type: object
      properties:
        startAt:
          type: string
        endAt:
          type: string
      required:
        - startAt
        - endAt
    CreateCourseClassDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        startAt:
          type: string
        endAt:
          type: string
        sessionCount:
          type: number
          minimum: 1
          maximum: 50
        isoSlots:
          type: array
          items:
            $ref: '#/components/schemas/CreateCourseClassSlotDto'
        courseId:
          type: string
        teacherId:
          type: string
      required:
        - code
        - name
        - startAt
        - sessionCount
        - isoSlots
        - courseId
        - teacherId
    StudentSimpleDto:
      type: object
      properties:
        id:
          type: string
        studentId:
          type: string
        profile:
          $ref: '#/components/schemas/ProfileDto'
      required:
        - id
        - studentId
        - profile
    CourseClassDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        course:
          $ref: '#/components/schemas/CourseListItemDto'
        startAt:
          type: string
        endAt:
          type: string
        sessionCount:
          type: number
        isoSlots:
          type: array
          items:
            $ref: '#/components/schemas/CourseClassSlotDto'
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentSimpleDto'
      required:
        - id
        - code
        - name
        - course
        - startAt
        - sessionCount
        - isoSlots
        - students
    UpdateCourseClassDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        startAt:
          type: string
        endAt:
          type: string
        teacherId:
          type: string
    StudentScoreListItemDto:
      type: object
      properties:
        id:
          type: string
        profile:
          $ref: '#/components/schemas/ProfileDto'
        score:
          type: number
          nullable: true
        studentId:
          type: string
      required:
        - id
        - profile
        - score
        - studentId
    UpdateCourseClassScoreItemDto:
      type: object
      properties:
        id:
          type: string
        score:
          type: number
          nullable: true
          minimum: 0
          maximum: 10
      required:
        - id
        - score
    UpdateCourseClassScoreDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCourseClassScoreItemDto'
      required:
        - data
    UpdateCourseClassStudentsListDto:
      type: object
      properties:
        studentIds:
          type: array
          items:
            type: string
      required:
        - studentIds
    ProgramListItemDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        createdAt:
          type: string
      required:
        - id
        - code
        - name
        - createdAt
    CourseDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        createdAt:
          type: string
        programs:
          type: array
          items:
            $ref: '#/components/schemas/ProgramListItemDto'
      required:
        - id
        - code
        - name
        - createdAt
        - programs
    CreateCourseDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        programIds:
          type: array
          items:
            type: string
      required:
        - code
        - name
        - programIds
    UpdateCourseDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        programIds:
          type: array
          items:
            type: string
    AcademicYearSimpleDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
      required:
        - id
        - code
        - name
    ManagementClassListItemDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        academicYear:
          $ref: '#/components/schemas/AcademicYearSimpleDto'
      required:
        - id
        - code
        - name
        - academicYear
    CreateManagementClassDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        academicYearId:
          type: string
        programId:
          type: string
      required:
        - code
        - name
        - academicYearId
        - programId
    ManagementClassDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        academicYear:
          $ref: '#/components/schemas/AcademicYearSimpleDto'
        program:
          $ref: '#/components/schemas/ProgramListItemDto'
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentSimpleDto'
      required:
        - id
        - code
        - name
        - academicYear
        - program
        - students
    UpdateManagementClassDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        academicYearId:
          type: string
        programId:
          type: string
    CreateProgramDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
      required:
        - code
        - name
    ProgramDto:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        createdAt:
          type: string
        courses:
          type: array
          items:
            $ref: '#/components/schemas/CourseListItemDto'
        managementClass:
          type: array
          items:
            $ref: '#/components/schemas/ManagementClassListItemDto'
      required:
        - id
        - code
        - name
        - createdAt
        - courses
        - managementClass
    UpdateProgramDto:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    AddCoursesDto:
      type: object
      properties:
        courses:
          type: array
          items:
            type: string
      required:
        - courses
    StudentScoreScoreDto:
      type: object
      properties:
        score:
          type: number
          nullable: true
        id:
          type: string
        studentId:
          type: string
        courseClassId:
          type: string
      required:
        - score
        - id
        - studentId
        - courseClassId
    StudentScoreDto:
      type: object
      properties:
        id:
          type: string
        academicYear:
          $ref: '#/components/schemas/AcademicYearDto'
        scores:
          type: array
          items:
            $ref: '#/components/schemas/StudentScoreScoreDto'
      required:
        - id
        - academicYear
        - scores
    SessionDto:
      type: object
      properties:
        id:
          type: string
        courseClass:
          $ref: '#/components/schemas/CourseClassListItemDto'
        startAt:
          type: string
        endAt:
          type: string
        substituteTeacher:
          $ref: '#/components/schemas/TeacherSimpleDto'
        changeSessionRequests:
          type: array
          items:
            $ref: '#/components/schemas/ChangeSessionRequestDto'
      required:
        - id
        - courseClass
        - startAt
        - endAt
        - changeSessionRequests
    CreateChangeSessionRequestDto:
      type: object
      properties:
        startAt:
          type: string
        endAt:
          type: string
        substituteTeacherId:
          type: string
      required:
        - startAt
        - endAt
    StudentDto:
      type: object
      properties:
        id:
          type: string
        studentId:
          type: string
        profile:
          $ref: '#/components/schemas/ProfileDto'
        managementClass:
          $ref: '#/components/schemas/ManagementClassListItemDto'
      required:
        - id
        - studentId
        - profile
        - managementClass
    TeacherDto:
      type: object
      properties:
        id:
          type: string
        teacherId:
          type: string
        profile:
          $ref: '#/components/schemas/ProfileDto'
        courseClasses:
          $ref: '#/components/schemas/CourseClassListItemDto'
      required:
        - id
        - teacherId
        - profile
        - courseClasses